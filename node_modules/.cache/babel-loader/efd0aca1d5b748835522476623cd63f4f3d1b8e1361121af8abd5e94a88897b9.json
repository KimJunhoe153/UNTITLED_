{"ast":null,"code":"var _jsxFileName = \"/Users/kimjunhoe/Documents/GitHub/UNTITLED_/src/Component/SignUp.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\n// 컨테이너 스타일\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100vh;\n  background-color: black;\n  padding-bottom: 200px;\n`;\n\n// 얇은 텍스트 스타일\n_c = Container;\nconst Title = styled.h1`\n  font-weight: 100;\n  font-size: 80px;\n  color: white;\n  margin-bottom: 40px;\n`;\n\n// 폼 컨테이너 스타일\n_c2 = Title;\nconst FormContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 500px;\n`;\n\n// 입력 필드 스타일\n_c3 = FormContainer;\nconst Input = styled.input`\n  width: 100%;\n  padding: 10px;\n  padding-left: 30px;\n  margin: 10px 0;\n  border: 1px solid white;\n  border-radius: 30px;\n  background-color: black;\n  color: white;\n  outline: none;\n  font-size: 16px;\n`;\n\n// 버튼 스타일\n_c4 = Input;\nconst Button = styled.button`\n  width: 45%;\n  padding: 10px;\n  margin: 20px 0;\n  border: 1px solid white;\n  border-radius: 30px;\n  background-color: white;\n  color: black;\n  font-size: 16px;\n  cursor: pointer;\n  transition: background-color 0.3s; /* 부드러운 전환 효과 추가 */\n\n  &:hover {\n    background-color: #561689;\n    color: white;\n    border: none;\n  }\n`;\n\n// 버튼 컨테이너 스타일\n_c5 = Button;\nconst ButtonContainer = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  width: 100%;\n`;\n_c6 = ButtonContainer;\nexport function SignUp() {\n  _s();\n  const [user, setUser] = useState(null);\n  let id;\n  let password;\n  let name;\n  let email;\n  let birthday;\n  async function signup() {\n    if (id == null || password == null || name == null || email == null || birthday == null) {\n      alert(\"빈칸이 있습니다.\");\n      return;\n    }\n    const user = {\n      userId: id,\n      password: password,\n      userName: name,\n      userEmail: email,\n      birthday: birthday\n    };\n    const sessionUser = {\n      userId: id,\n      password: password\n    };\n    try {\n      const response = await axios.post(\"http://localhost:8080/api/signup\", user);\n      const data = response.data;\n      console.log(data);\n      alert(data);\n      if (data == \"이미 등록된 아이디입니다.\") {\n        return;\n      } else {\n        setUser(sessionUser);\n      }\n      window.location.href = '/login';\n    } catch (error) {\n      console.log(\"요청에 실패했습니다.\", error);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormContainer, {\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          placeholder: \"ID\",\n          onChange: e => {\n            id = e.target.value;\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"password\",\n          placeholder: \"PW\",\n          onChange: e => {\n            password = e.target.value;\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          placeholder: \"NAME\",\n          onChange: e => {\n            name = e.target.value;\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"email\",\n          placeholder: \"EMAIL\",\n          onChange: e => {\n            email = e.target.value;\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"date\",\n          placeholder: \"BIRTHDAY\",\n          onChange: e => {\n            birthday = e.target.value;\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ButtonContainer, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => {\n              signup();\n            },\n            children: \"Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(SignUp, \"Iei9RGtZU29Y1RhBe1sbfh/MntA=\");\n_c7 = SignUp;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Title\");\n$RefreshReg$(_c3, \"FormContainer\");\n$RefreshReg$(_c4, \"Input\");\n$RefreshReg$(_c5, \"Button\");\n$RefreshReg$(_c6, \"ButtonContainer\");\n$RefreshReg$(_c7, \"SignUp\");","map":{"version":3,"names":["axios","React","useState","styled","jsxDEV","_jsxDEV","Fragment","_Fragment","Container","div","_c","Title","h1","_c2","FormContainer","_c3","Input","input","_c4","Button","button","_c5","ButtonContainer","_c6","SignUp","_s","user","setUser","id","password","name","email","birthday","signup","alert","userId","userName","userEmail","sessionUser","response","post","data","console","log","window","location","href","error","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","e","target","value","onClick","_c7","$RefreshReg$"],"sources":["/Users/kimjunhoe/Documents/GitHub/UNTITLED_/src/Component/SignUp.js"],"sourcesContent":["import axios from \"axios\";\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\n\n// 컨테이너 스타일\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100vh;\n  background-color: black;\n  padding-bottom: 200px;\n`;\n\n// 얇은 텍스트 스타일\nconst Title = styled.h1`\n  font-weight: 100;\n  font-size: 80px;\n  color: white;\n  margin-bottom: 40px;\n`;\n\n// 폼 컨테이너 스타일\nconst FormContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 500px;\n`;\n\n// 입력 필드 스타일\nconst Input = styled.input`\n  width: 100%;\n  padding: 10px;\n  padding-left: 30px;\n  margin: 10px 0;\n  border: 1px solid white;\n  border-radius: 30px;\n  background-color: black;\n  color: white;\n  outline: none;\n  font-size: 16px;\n`;\n\n// 버튼 스타일\nconst Button = styled.button`\n  width: 45%;\n  padding: 10px;\n  margin: 20px 0;\n  border: 1px solid white;\n  border-radius: 30px;\n  background-color: white;\n  color: black;\n  font-size: 16px;\n  cursor: pointer;\n  transition: background-color 0.3s; /* 부드러운 전환 효과 추가 */\n\n  &:hover {\n    background-color: #561689;\n    color: white;\n    border: none;\n  }\n`;\n\n// 버튼 컨테이너 스타일\nconst ButtonContainer = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  width: 100%;\n`;\n\nexport function SignUp() {\n  const [user, setUser] = useState(null);\n\n  let id;\n  let password;\n  let name;\n  let email;\n  let birthday;\n\n  async function signup(){\n    if(id==null || password==null || name==null || email==null || birthday==null){\n      alert(\"빈칸이 있습니다.\");\n      return;\n    }\n    const user = {\n      userId: id,\n      password: password,\n      userName: name,\n      userEmail: email,\n      birthday: birthday\n    };\n    const sessionUser = {\n      userId: id,\n      password: password\n    }\n    try{\n      const response = await axios.post(\"http://localhost:8080/api/signup\", user);\n      const data = response.data;\n      console.log(data);\n      alert(data);\n      if(data == \"이미 등록된 아이디입니다.\"){\n          return;\n      } else{\n          setUser(sessionUser);\n      }\n      window.location.href = '/login';\n    }catch(error){\n      console.log(\"요청에 실패했습니다.\", error);\n    }\n  }\n\n  return (\n    <>\n      <Container>\n        <Title>Sign Up</Title>\n        <FormContainer>\n          <Input type=\"text\" placeholder=\"ID\" onChange={(e)=> {id = e.target.value}}/>\n          <Input type=\"password\" placeholder=\"PW\" onChange={(e)=> {password = e.target.value}}/>\n          <Input type=\"text\" placeholder=\"NAME\" onChange={(e)=> {name = e.target.value}}/>\n          <Input type=\"email\" placeholder=\"EMAIL\" onChange={(e)=> {email = e.target.value}}/>\n          <Input type=\"date\" placeholder=\"BIRTHDAY\" onChange={(e)=> {birthday = e.target.value}}/>\n          <ButtonContainer>\n            <Button onClick={()=>{signup()}}>Sign Up</Button>\n          </ButtonContainer>\n        </FormContainer>\n      </Container>\n    </>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}