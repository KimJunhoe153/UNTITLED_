{"ast":null,"code":"var _jsxFileName = \"/Users/kimjunhoe/Documents/GitHub/UNTITLED_/src/Component/SignUp.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\n// 컨테이너 스타일\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100vh;\n  background-color: black;\n  padding-bottom: 200px;\n`;\n\n// 얇은 텍스트 스타일\n_c = Container;\nconst Title = styled.h1`\n  font-weight: 100;\n  font-size: 80px;\n  color: white;\n  margin-bottom: 40px;\n`;\n\n// 폼 컨테이너 스타일\n_c2 = Title;\nconst FormContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 500px;\n`;\n\n// 입력 필드 스타일\n_c3 = FormContainer;\nconst Input = styled.input`\n  width: 100%;\n  padding: 10px;\n  padding-left: 30px;\n  margin: 10px 0;\n  border: 1px solid white;\n  border-radius: 30px;\n  background-color: black;\n  color: white;\n  outline: none;\n  font-size: 16px;\n`;\n\n// 버튼 스타일\n_c4 = Input;\nconst Button = styled.div`\n  padding: 10px 70px;\n  border-radius: 50px;\n  background-color: white;\n  color: black;\n  font-size: 16px;\n  font-weight: 300;\n  margin: 10px 0px;\n  cursor: pointer;\n  transition: background-color 0.3s; /* 부드러운 전환 효과 추가 */\n\n  &:hover {\n    background-color: #561689;\n    color: white;\n    border: none;\n  }\n`;\n\n// 버튼 컨테이너 스타일\n_c5 = Button;\nconst ButtonContainer = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  width: 100%;\n`;\n_c6 = ButtonContainer;\nexport function SignUp() {\n  _s();\n  const [user, setUser] = useState(null);\n  let id;\n  let password;\n  let name;\n  let email;\n  let birthday;\n  async function signup() {\n    if (id == null || password == null || name == null || email == null || birthday == null) {\n      alert(\"빈칸이 있습니다.\");\n      return;\n    }\n    const user = {\n      userId: id,\n      password: password,\n      userName: name,\n      userEmail: email,\n      birthday: birthday\n    };\n    const sessionUser = {\n      userId: id,\n      password: password\n    };\n    try {\n      const response = await axios.post(\"http://localhost:8080/api/signup\", user);\n      const data = response.data;\n      console.log(data);\n      alert(data);\n      if (data == \"이미 등록된 아이디입니다.\") {\n        return;\n      } else {\n        setUser(sessionUser);\n      }\n      window.location.href = \"/login\";\n    } catch (error) {\n      console.log(\"요청에 실패했습니다.\", error);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormContainer, {\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          placeholder: \"ID\",\n          onChange: e => {\n            id = e.target.value;\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"password\",\n          placeholder: \"PW\",\n          onChange: e => {\n            password = e.target.value;\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          placeholder: \"NAME\",\n          onChange: e => {\n            name = e.target.value;\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"email\",\n          placeholder: \"EMAIL\",\n          onChange: e => {\n            email = e.target.value;\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"date\",\n          placeholder: \"BIRTHDAY\",\n          onChange: e => {\n            birthday = e.target.value;\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ButtonContainer, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => {\n              signup();\n            },\n            children: \"Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(SignUp, \"Iei9RGtZU29Y1RhBe1sbfh/MntA=\");\n_c7 = SignUp;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Title\");\n$RefreshReg$(_c3, \"FormContainer\");\n$RefreshReg$(_c4, \"Input\");\n$RefreshReg$(_c5, \"Button\");\n$RefreshReg$(_c6, \"ButtonContainer\");\n$RefreshReg$(_c7, \"SignUp\");","map":{"version":3,"names":["axios","React","useState","styled","jsxDEV","_jsxDEV","Fragment","_Fragment","Container","div","_c","Title","h1","_c2","FormContainer","_c3","Input","input","_c4","Button","_c5","ButtonContainer","_c6","SignUp","_s","user","setUser","id","password","name","email","birthday","signup","alert","userId","userName","userEmail","sessionUser","response","post","data","console","log","window","location","href","error","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","e","target","value","onClick","_c7","$RefreshReg$"],"sources":["/Users/kimjunhoe/Documents/GitHub/UNTITLED_/src/Component/SignUp.js"],"sourcesContent":["import axios from \"axios\";\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\n// 컨테이너 스타일\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100vh;\n  background-color: black;\n  padding-bottom: 200px;\n`;\n\n// 얇은 텍스트 스타일\nconst Title = styled.h1`\n  font-weight: 100;\n  font-size: 80px;\n  color: white;\n  margin-bottom: 40px;\n`;\n\n// 폼 컨테이너 스타일\nconst FormContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 500px;\n`;\n\n// 입력 필드 스타일\nconst Input = styled.input`\n  width: 100%;\n  padding: 10px;\n  padding-left: 30px;\n  margin: 10px 0;\n  border: 1px solid white;\n  border-radius: 30px;\n  background-color: black;\n  color: white;\n  outline: none;\n  font-size: 16px;\n`;\n\n// 버튼 스타일\nconst Button = styled.div`\n  padding: 10px 70px;\n  border-radius: 50px;\n  background-color: white;\n  color: black;\n  font-size: 16px;\n  font-weight: 300;\n  margin: 10px 0px;\n  cursor: pointer;\n  transition: background-color 0.3s; /* 부드러운 전환 효과 추가 */\n\n  &:hover {\n    background-color: #561689;\n    color: white;\n    border: none;\n  }\n`;\n\n// 버튼 컨테이너 스타일\nconst ButtonContainer = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  width: 100%;\n`;\n\nexport function SignUp() {\n  const [user, setUser] = useState(null);\n\n  let id;\n  let password;\n  let name;\n  let email;\n  let birthday;\n\n  async function signup() {\n    if (\n      id == null ||\n      password == null ||\n      name == null ||\n      email == null ||\n      birthday == null\n    ) {\n      alert(\"빈칸이 있습니다.\");\n      return;\n    }\n    const user = {\n      userId: id,\n      password: password,\n      userName: name,\n      userEmail: email,\n      birthday: birthday,\n    };\n    const sessionUser = {\n      userId: id,\n      password: password,\n    };\n    try {\n      const response = await axios.post(\n        \"http://localhost:8080/api/signup\",\n        user\n      );\n      const data = response.data;\n      console.log(data);\n      alert(data);\n      if (data == \"이미 등록된 아이디입니다.\") {\n        return;\n      } else {\n        setUser(sessionUser);\n      }\n      window.location.href = \"/login\";\n    } catch (error) {\n      console.log(\"요청에 실패했습니다.\", error);\n    }\n  }\n\n  return (\n    <>\n      <Container>\n        <Title>Sign Up</Title>\n        <FormContainer>\n          <Input\n            type=\"text\"\n            placeholder=\"ID\"\n            onChange={(e) => {\n              id = e.target.value;\n            }}\n          />\n          <Input\n            type=\"password\"\n            placeholder=\"PW\"\n            onChange={(e) => {\n              password = e.target.value;\n            }}\n          />\n          <Input\n            type=\"text\"\n            placeholder=\"NAME\"\n            onChange={(e) => {\n              name = e.target.value;\n            }}\n          />\n          <Input\n            type=\"email\"\n            placeholder=\"EMAIL\"\n            onChange={(e) => {\n              email = e.target.value;\n            }}\n          />\n          <Input\n            type=\"date\"\n            placeholder=\"BIRTHDAY\"\n            onChange={(e) => {\n              birthday = e.target.value;\n            }}\n          />\n          <ButtonContainer>\n            <Button\n              onClick={() => {\n                signup();\n              }}\n            >\n              Sign Up\n            </Button>\n          </ButtonContainer>\n        </FormContainer>\n      </Container>\n    </>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}